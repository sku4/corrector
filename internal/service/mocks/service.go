// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	corrector "github.com/sku4/corrector/models/corrector"
)

// MockCorrector is a mock of Corrector interface.
type MockCorrector struct {
	ctrl     *gomock.Controller
	recorder *MockCorrectorMockRecorder
}

// MockCorrectorMockRecorder is the mock recorder for MockCorrector.
type MockCorrectorMockRecorder struct {
	mock *MockCorrector
}

// NewMockCorrector creates a new mock instance.
func NewMockCorrector(ctrl *gomock.Controller) *MockCorrector {
	mock := &MockCorrector{ctrl: ctrl}
	mock.recorder = &MockCorrectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCorrector) EXPECT() *MockCorrectorMockRecorder {
	return m.recorder
}

// CheckSpell mocks base method.
func (m *MockCorrector) CheckSpell(arg0 corrector.Request) (corrector.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckSpell", arg0)
	ret0, _ := ret[0].(corrector.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckSpell indicates an expected call of CheckSpell.
func (mr *MockCorrectorMockRecorder) CheckSpell(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckSpell", reflect.TypeOf((*MockCorrector)(nil).CheckSpell), arg0)
}
